import numpy as np
#annualized return(monthly)
def cal_ann_return(ret):
    #ret the return of the portfolio
    return np.mean(ret)*12

#anualized volatility(monthly)
def cal_ann_vol(ret):
    # ret the return of the portfolio
    return np.var(ret)*12

#market beta(monthly)
def cal_market_beta(ret,mtk):
    # ret the return of the portfolio
    # the market return under the same period
    beta = np.cov(ret,mtk)/np.var(mtk)
    return beta

#sharpe ratio
def cal_sr(ret):
    # ret the return of the portfolio
    return np.mean(ret)/np.std(ret)

#max_drawdown
def cal_max_drawdown(ret):
    # ret the return of the portfolio
    net = np.cumprod(ret+1)
    return max(net)-min(net)

#VaR
def cal_VaR(ret,a):
    #ret is the return of the portfolio
    #a is the significance of the VaR
    return np.percentile(ret.sort(),a)

#CVaR
def cal_CVaR(ret,a):
    #ret is the return of the portfolio
    #a is the significance of the VaR
    ret_ad = ret.sort()
    n = len(ret_ad)
    ret_ad = ret_ad[0,n*a]
    return np.mean(ret_ad)

#Turnover
def cal_Turnover(weight,ret):
    #weight is matrix of the weights of the portfolio during the sample period, each column is the weights
    # ret is the return of the portfolio
    net = np.cumprod(ret + 1)
    n = len(weight)
    vary = weight[1:n,:]- weight[0:(n-1),:]
    return sum(np.dot(vary,net[1:n]))

